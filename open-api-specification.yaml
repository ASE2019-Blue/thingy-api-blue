openapi: 3.0.0
info:
  title: Thingy API
  version: '1.0-dev'
servers:
  - url: 'http://localhost:3000/'
security:
  - basicAuth: []
paths:
  /auth/token:
    post:
      summary: Generate an authentication token
      requestBody:
        description: Username and password of user to create token for
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationToken'
        '400':
          description: Invalid input
  /users:
    get:
      summary: Get a list of users
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfileShort'
  /users/{username}:
    get:
      summary: Get the full user profile of a single user
      parameters:
          - name: username
            in: path
            description: Username of the user
            required: true
            schema:
              type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileFull'
        '404':
          description: User not found
  /sign-up:
    post:
      summary: Register a new user
      requestBody:
        description: User that needs to be registered
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  schemas:
    AuthenticationToken:
      type: object
      required:
        - token
      properties:
        token:
          type: string
    UserCredentials:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
    UserDto:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
    User:
      type: object
      required:
        - id
        - username
      properties:
        id:
          type: string
        username:
          type: string
        createdAt:
          type: string
          format: date-time
        modifiedAt:
          type: string
          format: date-time
    UserProfileShort:
      type: object
      required:
        - username
      properties:
        username:
          type: string
        createdAt:
          type: string
          format: date-time
    UserProfileFull:
      allOf:
        - $ref: '#/components/schemas/UserProfileShort'
        - type: object
          required:
            - username
          properties:
            firstName:
              type: string
            lastName:
              type: string
